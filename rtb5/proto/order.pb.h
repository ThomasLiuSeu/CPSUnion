// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#ifndef PROTOBUF_order_2eproto__INCLUDED
#define PROTOBUF_order_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace RTB5 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_order_2eproto();
void protobuf_AssignDesc_order_2eproto();
void protobuf_ShutdownFile_order_2eproto();

class Order;

enum Order_CurrencyType {
  Order_CurrencyType_RMB = 0,
  Order_CurrencyType_USD = 1,
  Order_CurrencyType_Order_CurrencyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Order_CurrencyType_Order_CurrencyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Order_CurrencyType_IsValid(int value);
const Order_CurrencyType Order_CurrencyType_CurrencyType_MIN = Order_CurrencyType_RMB;
const Order_CurrencyType Order_CurrencyType_CurrencyType_MAX = Order_CurrencyType_USD;
const int Order_CurrencyType_CurrencyType_ARRAYSIZE = Order_CurrencyType_CurrencyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Order_CurrencyType_descriptor();
inline const ::std::string& Order_CurrencyType_Name(Order_CurrencyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Order_CurrencyType_descriptor(), value);
}
inline bool Order_CurrencyType_Parse(
    const ::std::string& name, Order_CurrencyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Order_CurrencyType>(
    Order_CurrencyType_descriptor(), name, value);
}
// ===================================================================

class Order : public ::google::protobuf::Message {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  void Swap(Order* other);

  // implements Message ----------------------------------------------

  inline Order* New() const { return New(NULL); }

  Order* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Order_CurrencyType CurrencyType;
  static const CurrencyType RMB = Order_CurrencyType_RMB;
  static const CurrencyType USD = Order_CurrencyType_USD;
  static inline bool CurrencyType_IsValid(int value) {
    return Order_CurrencyType_IsValid(value);
  }
  static const CurrencyType CurrencyType_MIN =
    Order_CurrencyType_CurrencyType_MIN;
  static const CurrencyType CurrencyType_MAX =
    Order_CurrencyType_CurrencyType_MAX;
  static const int CurrencyType_ARRAYSIZE =
    Order_CurrencyType_CurrencyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CurrencyType_descriptor() {
    return Order_CurrencyType_descriptor();
  }
  static inline const ::std::string& CurrencyType_Name(CurrencyType value) {
    return Order_CurrencyType_Name(value);
  }
  static inline bool CurrencyType_Parse(const ::std::string& name,
      CurrencyType* value) {
    return Order_CurrencyType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 order_id = 1;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::uint64 order_id() const;
  void set_order_id(::google::protobuf::uint64 value);

  // optional uint64 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint64 status() const;
  void set_status(::google::protobuf::uint64 value);

  // optional uint64 trading_volume = 3;
  void clear_trading_volume();
  static const int kTradingVolumeFieldNumber = 3;
  ::google::protobuf::uint64 trading_volume() const;
  void set_trading_volume(::google::protobuf::uint64 value);

  // optional uint64 commission = 4;
  void clear_commission();
  static const int kCommissionFieldNumber = 4;
  ::google::protobuf::uint64 commission() const;
  void set_commission(::google::protobuf::uint64 value);

  // optional uint64 order_time = 5;
  void clear_order_time();
  static const int kOrderTimeFieldNumber = 5;
  ::google::protobuf::uint64 order_time() const;
  void set_order_time(::google::protobuf::uint64 value);

  // optional uint64 valid_time = 6;
  void clear_valid_time();
  static const int kValidTimeFieldNumber = 6;
  ::google::protobuf::uint64 valid_time() const;
  void set_valid_time(::google::protobuf::uint64 value);

  // optional .RTB5.Order.CurrencyType currency_type = 7;
  void clear_currency_type();
  static const int kCurrencyTypeFieldNumber = 7;
  ::RTB5::Order_CurrencyType currency_type() const;
  void set_currency_type(::RTB5::Order_CurrencyType value);

  // optional uint64 click_id = 8;
  void clear_click_id();
  static const int kClickIdFieldNumber = 8;
  ::google::protobuf::uint64 click_id() const;
  void set_click_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RTB5.Order)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 order_id_;
  ::google::protobuf::uint64 status_;
  ::google::protobuf::uint64 trading_volume_;
  ::google::protobuf::uint64 commission_;
  ::google::protobuf::uint64 order_time_;
  ::google::protobuf::uint64 valid_time_;
  ::google::protobuf::uint64 click_id_;
  int currency_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_order_2eproto();
  friend void protobuf_AssignDesc_order_2eproto();
  friend void protobuf_ShutdownFile_order_2eproto();

  void InitAsDefaultInstance();
  static Order* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Order

// optional uint64 order_id = 1;
inline void Order::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::order_id() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.order_id)
  return order_id_;
}
inline void Order::set_order_id(::google::protobuf::uint64 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.order_id)
}

// optional uint64 status = 2;
inline void Order::clear_status() {
  status_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::status() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.status)
  return status_;
}
inline void Order::set_status(::google::protobuf::uint64 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.status)
}

// optional uint64 trading_volume = 3;
inline void Order::clear_trading_volume() {
  trading_volume_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::trading_volume() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.trading_volume)
  return trading_volume_;
}
inline void Order::set_trading_volume(::google::protobuf::uint64 value) {
  
  trading_volume_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.trading_volume)
}

// optional uint64 commission = 4;
inline void Order::clear_commission() {
  commission_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::commission() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.commission)
  return commission_;
}
inline void Order::set_commission(::google::protobuf::uint64 value) {
  
  commission_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.commission)
}

// optional uint64 order_time = 5;
inline void Order::clear_order_time() {
  order_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::order_time() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.order_time)
  return order_time_;
}
inline void Order::set_order_time(::google::protobuf::uint64 value) {
  
  order_time_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.order_time)
}

// optional uint64 valid_time = 6;
inline void Order::clear_valid_time() {
  valid_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::valid_time() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.valid_time)
  return valid_time_;
}
inline void Order::set_valid_time(::google::protobuf::uint64 value) {
  
  valid_time_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.valid_time)
}

// optional .RTB5.Order.CurrencyType currency_type = 7;
inline void Order::clear_currency_type() {
  currency_type_ = 0;
}
inline ::RTB5::Order_CurrencyType Order::currency_type() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.currency_type)
  return static_cast< ::RTB5::Order_CurrencyType >(currency_type_);
}
inline void Order::set_currency_type(::RTB5::Order_CurrencyType value) {
  
  currency_type_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.currency_type)
}

// optional uint64 click_id = 8;
inline void Order::clear_click_id() {
  click_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Order::click_id() const {
  // @@protoc_insertion_point(field_get:RTB5.Order.click_id)
  return click_id_;
}
inline void Order::set_click_id(::google::protobuf::uint64 value) {
  
  click_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Order.click_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace RTB5

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RTB5::Order_CurrencyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RTB5::Order_CurrencyType>() {
  return ::RTB5::Order_CurrencyType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_order_2eproto__INCLUDED
