// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#ifndef PROTOBUF_user_2eproto__INCLUDED
#define PROTOBUF_user_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace RTB5 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_user_2eproto();
void protobuf_AssignDesc_user_2eproto();
void protobuf_ShutdownFile_user_2eproto();

class User;
class UserExt;

// ===================================================================

class UserExt : public ::google::protobuf::Message {
 public:
  UserExt();
  virtual ~UserExt();

  UserExt(const UserExt& from);

  inline UserExt& operator=(const UserExt& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExt& default_instance();

  void Swap(UserExt* other);

  // implements Message ----------------------------------------------

  inline UserExt* New() const { return New(NULL); }

  UserExt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserExt& from);
  void MergeFrom(const UserExt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserExt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 campaign_enable = 1;
  int campaign_enable_size() const;
  void clear_campaign_enable();
  static const int kCampaignEnableFieldNumber = 1;
  ::google::protobuf::uint64 campaign_enable(int index) const;
  void set_campaign_enable(int index, ::google::protobuf::uint64 value);
  void add_campaign_enable(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      campaign_enable() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_campaign_enable();

  // @@protoc_insertion_point(class_scope:RTB5.UserExt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > campaign_enable_;
  mutable int _campaign_enable_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_user_2eproto();
  friend void protobuf_AssignDesc_user_2eproto();
  friend void protobuf_ShutdownFile_user_2eproto();

  void InitAsDefaultInstance();
  static UserExt* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional string user_name = 2;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string account = 3;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 4;
  void clear_password();
  static const int kPasswordFieldNumber = 4;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string token = 5;
  void clear_token();
  static const int kTokenFieldNumber = 5;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional .RTB5.UserExt user_ext = 6;
  bool has_user_ext() const;
  void clear_user_ext();
  static const int kUserExtFieldNumber = 6;
  const ::RTB5::UserExt& user_ext() const;
  ::RTB5::UserExt* mutable_user_ext();
  ::RTB5::UserExt* release_user_ext();
  void set_allocated_user_ext(::RTB5::UserExt* user_ext);

  // @@protoc_insertion_point(class_scope:RTB5.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::RTB5::UserExt* user_ext_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_user_2eproto();
  friend void protobuf_AssignDesc_user_2eproto();
  friend void protobuf_ShutdownFile_user_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserExt

// repeated uint64 campaign_enable = 1;
inline int UserExt::campaign_enable_size() const {
  return campaign_enable_.size();
}
inline void UserExt::clear_campaign_enable() {
  campaign_enable_.Clear();
}
inline ::google::protobuf::uint64 UserExt::campaign_enable(int index) const {
  // @@protoc_insertion_point(field_get:RTB5.UserExt.campaign_enable)
  return campaign_enable_.Get(index);
}
inline void UserExt::set_campaign_enable(int index, ::google::protobuf::uint64 value) {
  campaign_enable_.Set(index, value);
  // @@protoc_insertion_point(field_set:RTB5.UserExt.campaign_enable)
}
inline void UserExt::add_campaign_enable(::google::protobuf::uint64 value) {
  campaign_enable_.Add(value);
  // @@protoc_insertion_point(field_add:RTB5.UserExt.campaign_enable)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UserExt::campaign_enable() const {
  // @@protoc_insertion_point(field_list:RTB5.UserExt.campaign_enable)
  return campaign_enable_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UserExt::mutable_campaign_enable() {
  // @@protoc_insertion_point(field_mutable_list:RTB5.UserExt.campaign_enable)
  return &campaign_enable_;
}

// -------------------------------------------------------------------

// User

// optional uint64 user_id = 1;
inline void User::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 User::user_id() const {
  // @@protoc_insertion_point(field_get:RTB5.User.user_id)
  return user_id_;
}
inline void User::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.User.user_id)
}

// optional string user_name = 2;
inline void User::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::user_name() const {
  // @@protoc_insertion_point(field_get:RTB5.User.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.user_name)
}
inline void User::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.user_name)
}
inline void User::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.user_name)
}
inline ::std::string* User::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_user_name() {
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.user_name)
}

// optional string account = 3;
inline void User::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::account() const {
  // @@protoc_insertion_point(field_get:RTB5.User.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.account)
}
inline void User::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.account)
}
inline void User::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.account)
}
inline ::std::string* User::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_account() {
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.account)
}

// optional string password = 4;
inline void User::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::password() const {
  // @@protoc_insertion_point(field_get:RTB5.User.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.password)
}
inline void User::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.password)
}
inline void User::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.password)
}
inline ::std::string* User::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_password() {
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.password)
}

// optional string token = 5;
inline void User::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::token() const {
  // @@protoc_insertion_point(field_get:RTB5.User.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.token)
}
inline void User::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.token)
}
inline void User::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.token)
}
inline ::std::string* User::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.token)
}

// optional .RTB5.UserExt user_ext = 6;
inline bool User::has_user_ext() const {
  return !_is_default_instance_ && user_ext_ != NULL;
}
inline void User::clear_user_ext() {
  if (GetArenaNoVirtual() == NULL && user_ext_ != NULL) delete user_ext_;
  user_ext_ = NULL;
}
inline const ::RTB5::UserExt& User::user_ext() const {
  // @@protoc_insertion_point(field_get:RTB5.User.user_ext)
  return user_ext_ != NULL ? *user_ext_ : *default_instance_->user_ext_;
}
inline ::RTB5::UserExt* User::mutable_user_ext() {
  
  if (user_ext_ == NULL) {
    user_ext_ = new ::RTB5::UserExt;
  }
  // @@protoc_insertion_point(field_mutable:RTB5.User.user_ext)
  return user_ext_;
}
inline ::RTB5::UserExt* User::release_user_ext() {
  
  ::RTB5::UserExt* temp = user_ext_;
  user_ext_ = NULL;
  return temp;
}
inline void User::set_allocated_user_ext(::RTB5::UserExt* user_ext) {
  delete user_ext_;
  user_ext_ = user_ext;
  if (user_ext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.user_ext)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RTB5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_user_2eproto__INCLUDED
