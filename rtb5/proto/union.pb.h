// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: union.proto

#ifndef PROTOBUF_union_2eproto__INCLUDED
#define PROTOBUF_union_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "campaign.pb.h"
// @@protoc_insertion_point(includes)

namespace RTB5 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_union_2eproto();
void protobuf_AssignDesc_union_2eproto();
void protobuf_ShutdownFile_union_2eproto();

class Union;

// ===================================================================

class Union : public ::google::protobuf::Message {
 public:
  Union();
  virtual ~Union();

  Union(const Union& from);

  inline Union& operator=(const Union& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Union& default_instance();

  void Swap(Union* other);

  // implements Message ----------------------------------------------

  inline Union* New() const { return New(NULL); }

  Union* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Union& from);
  void MergeFrom(const Union& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Union* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 union_id = 1;
  void clear_union_id();
  static const int kUnionIdFieldNumber = 1;
  ::google::protobuf::uint64 union_id() const;
  void set_union_id(::google::protobuf::uint64 value);

  // optional string union_name = 2;
  void clear_union_name();
  static const int kUnionNameFieldNumber = 2;
  const ::std::string& union_name() const;
  void set_union_name(const ::std::string& value);
  void set_union_name(const char* value);
  void set_union_name(const char* value, size_t size);
  ::std::string* mutable_union_name();
  ::std::string* release_union_name();
  void set_allocated_union_name(::std::string* union_name);

  // optional string url_pattern = 3;
  void clear_url_pattern();
  static const int kUrlPatternFieldNumber = 3;
  const ::std::string& url_pattern() const;
  void set_url_pattern(const ::std::string& value);
  void set_url_pattern(const char* value);
  void set_url_pattern(const char* value, size_t size);
  ::std::string* mutable_url_pattern();
  ::std::string* release_url_pattern();
  void set_allocated_url_pattern(::std::string* url_pattern);

  // repeated .RTB5.Campaign campaigns = 4;
  int campaigns_size() const;
  void clear_campaigns();
  static const int kCampaignsFieldNumber = 4;
  const ::RTB5::Campaign& campaigns(int index) const;
  ::RTB5::Campaign* mutable_campaigns(int index);
  ::RTB5::Campaign* add_campaigns();
  ::google::protobuf::RepeatedPtrField< ::RTB5::Campaign >*
      mutable_campaigns();
  const ::google::protobuf::RepeatedPtrField< ::RTB5::Campaign >&
      campaigns() const;

  // @@protoc_insertion_point(class_scope:RTB5.Union)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 union_id_;
  ::google::protobuf::internal::ArenaStringPtr union_name_;
  ::google::protobuf::internal::ArenaStringPtr url_pattern_;
  ::google::protobuf::RepeatedPtrField< ::RTB5::Campaign > campaigns_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_union_2eproto();
  friend void protobuf_AssignDesc_union_2eproto();
  friend void protobuf_ShutdownFile_union_2eproto();

  void InitAsDefaultInstance();
  static Union* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Union

// optional uint64 union_id = 1;
inline void Union::clear_union_id() {
  union_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Union::union_id() const {
  // @@protoc_insertion_point(field_get:RTB5.Union.union_id)
  return union_id_;
}
inline void Union::set_union_id(::google::protobuf::uint64 value) {
  
  union_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Union.union_id)
}

// optional string union_name = 2;
inline void Union::clear_union_name() {
  union_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Union::union_name() const {
  // @@protoc_insertion_point(field_get:RTB5.Union.union_name)
  return union_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Union::set_union_name(const ::std::string& value) {
  
  union_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.Union.union_name)
}
inline void Union::set_union_name(const char* value) {
  
  union_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.Union.union_name)
}
inline void Union::set_union_name(const char* value, size_t size) {
  
  union_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.Union.union_name)
}
inline ::std::string* Union::mutable_union_name() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.Union.union_name)
  return union_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Union::release_union_name() {
  
  return union_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Union::set_allocated_union_name(::std::string* union_name) {
  if (union_name != NULL) {
    
  } else {
    
  }
  union_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), union_name);
  // @@protoc_insertion_point(field_set_allocated:RTB5.Union.union_name)
}

// optional string url_pattern = 3;
inline void Union::clear_url_pattern() {
  url_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Union::url_pattern() const {
  // @@protoc_insertion_point(field_get:RTB5.Union.url_pattern)
  return url_pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Union::set_url_pattern(const ::std::string& value) {
  
  url_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.Union.url_pattern)
}
inline void Union::set_url_pattern(const char* value) {
  
  url_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.Union.url_pattern)
}
inline void Union::set_url_pattern(const char* value, size_t size) {
  
  url_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.Union.url_pattern)
}
inline ::std::string* Union::mutable_url_pattern() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.Union.url_pattern)
  return url_pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Union::release_url_pattern() {
  
  return url_pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Union::set_allocated_url_pattern(::std::string* url_pattern) {
  if (url_pattern != NULL) {
    
  } else {
    
  }
  url_pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_pattern);
  // @@protoc_insertion_point(field_set_allocated:RTB5.Union.url_pattern)
}

// repeated .RTB5.Campaign campaigns = 4;
inline int Union::campaigns_size() const {
  return campaigns_.size();
}
inline void Union::clear_campaigns() {
  campaigns_.Clear();
}
inline const ::RTB5::Campaign& Union::campaigns(int index) const {
  // @@protoc_insertion_point(field_get:RTB5.Union.campaigns)
  return campaigns_.Get(index);
}
inline ::RTB5::Campaign* Union::mutable_campaigns(int index) {
  // @@protoc_insertion_point(field_mutable:RTB5.Union.campaigns)
  return campaigns_.Mutable(index);
}
inline ::RTB5::Campaign* Union::add_campaigns() {
  // @@protoc_insertion_point(field_add:RTB5.Union.campaigns)
  return campaigns_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RTB5::Campaign >*
Union::mutable_campaigns() {
  // @@protoc_insertion_point(field_mutable_list:RTB5.Union.campaigns)
  return &campaigns_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RTB5::Campaign >&
Union::campaigns() const {
  // @@protoc_insertion_point(field_list:RTB5.Union.campaigns)
  return campaigns_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace RTB5

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_union_2eproto__INCLUDED
