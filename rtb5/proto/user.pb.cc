// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RTB5 {

namespace {

const ::google::protobuf::Descriptor* UserExt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserExt_reflection_ = NULL;
const ::google::protobuf::Descriptor* User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_user_2eproto() {
  protobuf_AddDesc_user_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "user.proto");
  GOOGLE_CHECK(file != NULL);
  UserExt_descriptor_ = file->message_type(0);
  static const int UserExt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserExt, campaign_enable_),
  };
  UserExt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserExt_descriptor_,
      UserExt::default_instance_,
      UserExt_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserExt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserExt, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserExt, _is_default_instance_));
  User_descriptor_ = file->message_type(1);
  static const int User_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, user_ext_),
  };
  User_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      User_descriptor_,
      User::default_instance_,
      User_offsets_,
      -1,
      -1,
      -1,
      sizeof(User),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_user_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserExt_descriptor_, &UserExt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      User_descriptor_, &User::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_user_2eproto() {
  delete UserExt::default_instance_;
  delete UserExt_reflection_;
  delete User::default_instance_;
  delete User_reflection_;
}

void protobuf_AddDesc_user_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nuser.proto\022\004RTB5\"\"\n\007UserExt\022\027\n\017campaig"
    "n_enable\030\001 \003(\004\"}\n\004User\022\017\n\007user_id\030\001 \001(\004\022"
    "\021\n\tuser_name\030\002 \001(\t\022\017\n\007account\030\003 \001(\t\022\020\n\010p"
    "assword\030\004 \001(\t\022\r\n\005token\030\005 \001(\t\022\037\n\010user_ext"
    "\030\006 \001(\0132\r.RTB5.UserExtb\006proto3", 189);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user.proto", &protobuf_RegisterTypes);
  UserExt::default_instance_ = new UserExt();
  User::default_instance_ = new User();
  UserExt::default_instance_->InitAsDefaultInstance();
  User::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_user_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_user_2eproto {
  StaticDescriptorInitializer_user_2eproto() {
    protobuf_AddDesc_user_2eproto();
  }
} static_descriptor_initializer_user_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int UserExt::kCampaignEnableFieldNumber;
#endif  // !_MSC_VER

UserExt::UserExt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RTB5.UserExt)
}

void UserExt::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserExt::UserExt(const UserExt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RTB5.UserExt)
}

void UserExt::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UserExt::~UserExt() {
  // @@protoc_insertion_point(destructor:RTB5.UserExt)
  SharedDtor();
}

void UserExt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserExt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserExt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserExt_descriptor_;
}

const UserExt& UserExt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_2eproto();
  return *default_instance_;
}

UserExt* UserExt::default_instance_ = NULL;

UserExt* UserExt::New(::google::protobuf::Arena* arena) const {
  UserExt* n = new UserExt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserExt::Clear() {
  campaign_enable_.Clear();
}

bool UserExt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RTB5.UserExt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 campaign_enable = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_campaign_enable())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_campaign_enable())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RTB5.UserExt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RTB5.UserExt)
  return false;
#undef DO_
}

void UserExt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RTB5.UserExt)
  // repeated uint64 campaign_enable = 1;
  if (this->campaign_enable_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_campaign_enable_cached_byte_size_);
  }
  for (int i = 0; i < this->campaign_enable_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->campaign_enable(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RTB5.UserExt)
}

::google::protobuf::uint8* UserExt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RTB5.UserExt)
  // repeated uint64 campaign_enable = 1;
  if (this->campaign_enable_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _campaign_enable_cached_byte_size_, target);
  }
  for (int i = 0; i < this->campaign_enable_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->campaign_enable(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RTB5.UserExt)
  return target;
}

int UserExt::ByteSize() const {
  int total_size = 0;

  // repeated uint64 campaign_enable = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->campaign_enable_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->campaign_enable(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _campaign_enable_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserExt::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserExt* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExt>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserExt::MergeFrom(const UserExt& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  campaign_enable_.MergeFrom(from.campaign_enable_);
}

void UserExt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExt::CopyFrom(const UserExt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExt::IsInitialized() const {

  return true;
}

void UserExt::Swap(UserExt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserExt::InternalSwap(UserExt* other) {
  campaign_enable_.UnsafeArenaSwap(&other->campaign_enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserExt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserExt_descriptor_;
  metadata.reflection = UserExt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserExt

// repeated uint64 campaign_enable = 1;
int UserExt::campaign_enable_size() const {
  return campaign_enable_.size();
}
void UserExt::clear_campaign_enable() {
  campaign_enable_.Clear();
}
 ::google::protobuf::uint64 UserExt::campaign_enable(int index) const {
  // @@protoc_insertion_point(field_get:RTB5.UserExt.campaign_enable)
  return campaign_enable_.Get(index);
}
 void UserExt::set_campaign_enable(int index, ::google::protobuf::uint64 value) {
  campaign_enable_.Set(index, value);
  // @@protoc_insertion_point(field_set:RTB5.UserExt.campaign_enable)
}
 void UserExt::add_campaign_enable(::google::protobuf::uint64 value) {
  campaign_enable_.Add(value);
  // @@protoc_insertion_point(field_add:RTB5.UserExt.campaign_enable)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
UserExt::campaign_enable() const {
  // @@protoc_insertion_point(field_list:RTB5.UserExt.campaign_enable)
  return campaign_enable_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
UserExt::mutable_campaign_enable() {
  // @@protoc_insertion_point(field_mutable_list:RTB5.UserExt.campaign_enable)
  return &campaign_enable_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int User::kUserIdFieldNumber;
const int User::kUserNameFieldNumber;
const int User::kAccountFieldNumber;
const int User::kPasswordFieldNumber;
const int User::kTokenFieldNumber;
const int User::kUserExtFieldNumber;
#endif  // !_MSC_VER

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RTB5.User)
}

void User::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_ext_ = const_cast< ::RTB5::UserExt*>(&::RTB5::UserExt::default_instance());
}

User::User(const User& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RTB5.User)
}

void User::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_ext_ = NULL;
}

User::~User() {
  // @@protoc_insertion_point(destructor:RTB5.User)
  SharedDtor();
}

void User::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete user_ext_;
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_descriptor_;
}

const User& User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_user_2eproto();
  return *default_instance_;
}

User* User::default_instance_ = NULL;

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
  user_id_ = GOOGLE_ULONGLONG(0);
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_ext_ != NULL) delete user_ext_;
  user_ext_ = NULL;
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RTB5.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.User.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_account;
        break;
      }

      // optional string account = 3;
      case 3: {
        if (tag == 26) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.User.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_password;
        break;
      }

      // optional string password = 4;
      case 4: {
        if (tag == 34) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.User.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_token;
        break;
      }

      // optional string token = 5;
      case 5: {
        if (tag == 42) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.User.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_user_ext;
        break;
      }

      // optional .RTB5.UserExt user_ext = 6;
      case 6: {
        if (tag == 50) {
         parse_user_ext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_ext()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RTB5.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RTB5.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RTB5.User)
  // optional uint64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->token(), output);
  }

  // optional .RTB5.UserExt user_ext = 6;
  if (this->has_user_ext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->user_ext_, output);
  }

  // @@protoc_insertion_point(serialize_end:RTB5.User)
}

::google::protobuf::uint8* User::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RTB5.User)
  // optional uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string password = 4;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.User.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->token(), target);
  }

  // optional .RTB5.UserExt user_ext = 6;
  if (this->has_user_ext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->user_ext_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RTB5.User)
  return target;
}

int User::ByteSize() const {
  int total_size = 0;

  // optional uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional .RTB5.UserExt user_ext = 6;
  if (this->has_user_ext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_ext_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const User* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_user_ext()) {
    mutable_user_ext()->::RTB5::UserExt::MergeFrom(from.user_ext());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {

  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  std::swap(user_id_, other->user_id_);
  user_name_.Swap(&other->user_name_);
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  token_.Swap(&other->token_);
  std::swap(user_ext_, other->user_ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_descriptor_;
  metadata.reflection = User_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// optional uint64 user_id = 1;
void User::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 User::user_id() const {
  // @@protoc_insertion_point(field_get:RTB5.User.user_id)
  return user_id_;
}
 void User::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.User.user_id)
}

// optional string user_name = 2;
void User::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User::user_name() const {
  // @@protoc_insertion_point(field_get:RTB5.User.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.user_name)
}
 void User::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.user_name)
}
 void User::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.user_name)
}
 ::std::string* User::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User::release_user_name() {
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.user_name)
}

// optional string account = 3;
void User::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User::account() const {
  // @@protoc_insertion_point(field_get:RTB5.User.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.account)
}
 void User::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.account)
}
 void User::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.account)
}
 ::std::string* User::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User::release_account() {
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.account)
}

// optional string password = 4;
void User::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User::password() const {
  // @@protoc_insertion_point(field_get:RTB5.User.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.password)
}
 void User::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.password)
}
 void User::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.password)
}
 ::std::string* User::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User::release_password() {
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.password)
}

// optional string token = 5;
void User::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User::token() const {
  // @@protoc_insertion_point(field_get:RTB5.User.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.User.token)
}
 void User::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.User.token)
}
 void User::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.User.token)
}
 ::std::string* User::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.User.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.token)
}

// optional .RTB5.UserExt user_ext = 6;
bool User::has_user_ext() const {
  return !_is_default_instance_ && user_ext_ != NULL;
}
void User::clear_user_ext() {
  if (GetArenaNoVirtual() == NULL && user_ext_ != NULL) delete user_ext_;
  user_ext_ = NULL;
}
const ::RTB5::UserExt& User::user_ext() const {
  // @@protoc_insertion_point(field_get:RTB5.User.user_ext)
  return user_ext_ != NULL ? *user_ext_ : *default_instance_->user_ext_;
}
::RTB5::UserExt* User::mutable_user_ext() {
  
  if (user_ext_ == NULL) {
    user_ext_ = new ::RTB5::UserExt;
  }
  // @@protoc_insertion_point(field_mutable:RTB5.User.user_ext)
  return user_ext_;
}
::RTB5::UserExt* User::release_user_ext() {
  
  ::RTB5::UserExt* temp = user_ext_;
  user_ext_ = NULL;
  return temp;
}
void User::set_allocated_user_ext(::RTB5::UserExt* user_ext) {
  delete user_ext_;
  user_ext_ = user_ext;
  if (user_ext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RTB5.User.user_ext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace RTB5

// @@protoc_insertion_point(global_scope)
