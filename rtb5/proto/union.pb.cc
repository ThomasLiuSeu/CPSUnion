// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: union.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "union.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RTB5 {

namespace {

const ::google::protobuf::Descriptor* Union_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Union_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_union_2eproto() {
  protobuf_AddDesc_union_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "union.proto");
  GOOGLE_CHECK(file != NULL);
  Union_descriptor_ = file->message_type(0);
  static const int Union_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Union, union_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Union, union_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Union, url_pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Union, campaigns_),
  };
  Union_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Union_descriptor_,
      Union::default_instance_,
      Union_offsets_,
      -1,
      -1,
      -1,
      sizeof(Union),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Union, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Union, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_union_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Union_descriptor_, &Union::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_union_2eproto() {
  delete Union::default_instance_;
  delete Union_reflection_;
}

void protobuf_AddDesc_union_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RTB5::protobuf_AddDesc_campaign_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013union.proto\022\004RTB5\032\016campaign.proto\"e\n\005U"
    "nion\022\020\n\010union_id\030\001 \001(\004\022\022\n\nunion_name\030\002 \001"
    "(\t\022\023\n\013url_pattern\030\003 \001(\t\022!\n\tcampaigns\030\004 \003"
    "(\0132\016.RTB5.Campaignb\006proto3", 146);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "union.proto", &protobuf_RegisterTypes);
  Union::default_instance_ = new Union();
  Union::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_union_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_union_2eproto {
  StaticDescriptorInitializer_union_2eproto() {
    protobuf_AddDesc_union_2eproto();
  }
} static_descriptor_initializer_union_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Union::kUnionIdFieldNumber;
const int Union::kUnionNameFieldNumber;
const int Union::kUrlPatternFieldNumber;
const int Union::kCampaignsFieldNumber;
#endif  // !_MSC_VER

Union::Union()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RTB5.Union)
}

void Union::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Union::Union(const Union& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RTB5.Union)
}

void Union::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  union_id_ = GOOGLE_ULONGLONG(0);
  union_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Union::~Union() {
  // @@protoc_insertion_point(destructor:RTB5.Union)
  SharedDtor();
}

void Union::SharedDtor() {
  union_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Union::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Union::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Union_descriptor_;
}

const Union& Union::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_union_2eproto();
  return *default_instance_;
}

Union* Union::default_instance_ = NULL;

Union* Union::New(::google::protobuf::Arena* arena) const {
  Union* n = new Union;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Union::Clear() {
  union_id_ = GOOGLE_ULONGLONG(0);
  union_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  campaigns_.Clear();
}

bool Union::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RTB5.Union)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 union_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &union_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_union_name;
        break;
      }

      // optional string union_name = 2;
      case 2: {
        if (tag == 18) {
         parse_union_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_union_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->union_name().data(), this->union_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.Union.union_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_url_pattern;
        break;
      }

      // optional string url_pattern = 3;
      case 3: {
        if (tag == 26) {
         parse_url_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url_pattern().data(), this->url_pattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.Union.url_pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_campaigns;
        break;
      }

      // repeated .RTB5.Campaign campaigns = 4;
      case 4: {
        if (tag == 34) {
         parse_campaigns:
          DO_(input->IncrementRecursionDepth());
         parse_loop_campaigns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_campaigns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_campaigns;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RTB5.Union)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RTB5.Union)
  return false;
#undef DO_
}

void Union::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RTB5.Union)
  // optional uint64 union_id = 1;
  if (this->union_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->union_id(), output);
  }

  // optional string union_name = 2;
  if (this->union_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->union_name().data(), this->union_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Union.union_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->union_name(), output);
  }

  // optional string url_pattern = 3;
  if (this->url_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_pattern().data(), this->url_pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Union.url_pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url_pattern(), output);
  }

  // repeated .RTB5.Campaign campaigns = 4;
  for (unsigned int i = 0, n = this->campaigns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->campaigns(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RTB5.Union)
}

::google::protobuf::uint8* Union::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RTB5.Union)
  // optional uint64 union_id = 1;
  if (this->union_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->union_id(), target);
  }

  // optional string union_name = 2;
  if (this->union_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->union_name().data(), this->union_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Union.union_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->union_name(), target);
  }

  // optional string url_pattern = 3;
  if (this->url_pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_pattern().data(), this->url_pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Union.url_pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url_pattern(), target);
  }

  // repeated .RTB5.Campaign campaigns = 4;
  for (unsigned int i = 0, n = this->campaigns_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->campaigns(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RTB5.Union)
  return target;
}

int Union::ByteSize() const {
  int total_size = 0;

  // optional uint64 union_id = 1;
  if (this->union_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->union_id());
  }

  // optional string union_name = 2;
  if (this->union_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->union_name());
  }

  // optional string url_pattern = 3;
  if (this->url_pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url_pattern());
  }

  // repeated .RTB5.Campaign campaigns = 4;
  total_size += 1 * this->campaigns_size();
  for (int i = 0; i < this->campaigns_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->campaigns(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Union::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Union* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Union>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Union::MergeFrom(const Union& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  campaigns_.MergeFrom(from.campaigns_);
  if (from.union_id() != 0) {
    set_union_id(from.union_id());
  }
  if (from.union_name().size() > 0) {

    union_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.union_name_);
  }
  if (from.url_pattern().size() > 0) {

    url_pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_pattern_);
  }
}

void Union::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Union::CopyFrom(const Union& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Union::IsInitialized() const {

  return true;
}

void Union::Swap(Union* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Union::InternalSwap(Union* other) {
  std::swap(union_id_, other->union_id_);
  union_name_.Swap(&other->union_name_);
  url_pattern_.Swap(&other->url_pattern_);
  campaigns_.UnsafeArenaSwap(&other->campaigns_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Union::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Union_descriptor_;
  metadata.reflection = Union_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Union

// optional uint64 union_id = 1;
void Union::clear_union_id() {
  union_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Union::union_id() const {
  // @@protoc_insertion_point(field_get:RTB5.Union.union_id)
  return union_id_;
}
 void Union::set_union_id(::google::protobuf::uint64 value) {
  
  union_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Union.union_id)
}

// optional string union_name = 2;
void Union::clear_union_name() {
  union_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Union::union_name() const {
  // @@protoc_insertion_point(field_get:RTB5.Union.union_name)
  return union_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Union::set_union_name(const ::std::string& value) {
  
  union_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.Union.union_name)
}
 void Union::set_union_name(const char* value) {
  
  union_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.Union.union_name)
}
 void Union::set_union_name(const char* value, size_t size) {
  
  union_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.Union.union_name)
}
 ::std::string* Union::mutable_union_name() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.Union.union_name)
  return union_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Union::release_union_name() {
  
  return union_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Union::set_allocated_union_name(::std::string* union_name) {
  if (union_name != NULL) {
    
  } else {
    
  }
  union_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), union_name);
  // @@protoc_insertion_point(field_set_allocated:RTB5.Union.union_name)
}

// optional string url_pattern = 3;
void Union::clear_url_pattern() {
  url_pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Union::url_pattern() const {
  // @@protoc_insertion_point(field_get:RTB5.Union.url_pattern)
  return url_pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Union::set_url_pattern(const ::std::string& value) {
  
  url_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.Union.url_pattern)
}
 void Union::set_url_pattern(const char* value) {
  
  url_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.Union.url_pattern)
}
 void Union::set_url_pattern(const char* value, size_t size) {
  
  url_pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.Union.url_pattern)
}
 ::std::string* Union::mutable_url_pattern() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.Union.url_pattern)
  return url_pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Union::release_url_pattern() {
  
  return url_pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Union::set_allocated_url_pattern(::std::string* url_pattern) {
  if (url_pattern != NULL) {
    
  } else {
    
  }
  url_pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_pattern);
  // @@protoc_insertion_point(field_set_allocated:RTB5.Union.url_pattern)
}

// repeated .RTB5.Campaign campaigns = 4;
int Union::campaigns_size() const {
  return campaigns_.size();
}
void Union::clear_campaigns() {
  campaigns_.Clear();
}
const ::RTB5::Campaign& Union::campaigns(int index) const {
  // @@protoc_insertion_point(field_get:RTB5.Union.campaigns)
  return campaigns_.Get(index);
}
::RTB5::Campaign* Union::mutable_campaigns(int index) {
  // @@protoc_insertion_point(field_mutable:RTB5.Union.campaigns)
  return campaigns_.Mutable(index);
}
::RTB5::Campaign* Union::add_campaigns() {
  // @@protoc_insertion_point(field_add:RTB5.Union.campaigns)
  return campaigns_.Add();
}
::google::protobuf::RepeatedPtrField< ::RTB5::Campaign >*
Union::mutable_campaigns() {
  // @@protoc_insertion_point(field_mutable_list:RTB5.Union.campaigns)
  return &campaigns_;
}
const ::google::protobuf::RepeatedPtrField< ::RTB5::Campaign >&
Union::campaigns() const {
  // @@protoc_insertion_point(field_list:RTB5.Union.campaigns)
  return campaigns_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace RTB5

// @@protoc_insertion_point(global_scope)
