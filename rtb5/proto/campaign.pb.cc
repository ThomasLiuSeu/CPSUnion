// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: campaign.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "campaign.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RTB5 {

namespace {

const ::google::protobuf::Descriptor* Campaign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Campaign_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_campaign_2eproto() {
  protobuf_AddDesc_campaign_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "campaign.proto");
  GOOGLE_CHECK(file != NULL);
  Campaign_descriptor_ = file->message_type(0);
  static const int Campaign_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, campaign_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, union_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, campaign_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, percent_),
  };
  Campaign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Campaign_descriptor_,
      Campaign::default_instance_,
      Campaign_offsets_,
      -1,
      -1,
      -1,
      sizeof(Campaign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Campaign, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_campaign_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Campaign_descriptor_, &Campaign::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_campaign_2eproto() {
  delete Campaign::default_instance_;
  delete Campaign_reflection_;
}

void protobuf_AddDesc_campaign_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016campaign.proto\022\004RTB5\"j\n\010Campaign\022\023\n\013ca"
    "mpaign_id\030\001 \001(\004\022\020\n\010union_id\030\002 \001(\004\022\025\n\rcam"
    "paign_name\030\003 \001(\t\022\017\n\007pattern\030\004 \001(\t\022\017\n\007per"
    "cent\030\005 \001(\001b\006proto3", 138);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "campaign.proto", &protobuf_RegisterTypes);
  Campaign::default_instance_ = new Campaign();
  Campaign::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_campaign_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_campaign_2eproto {
  StaticDescriptorInitializer_campaign_2eproto() {
    protobuf_AddDesc_campaign_2eproto();
  }
} static_descriptor_initializer_campaign_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Campaign::kCampaignIdFieldNumber;
const int Campaign::kUnionIdFieldNumber;
const int Campaign::kCampaignNameFieldNumber;
const int Campaign::kPatternFieldNumber;
const int Campaign::kPercentFieldNumber;
#endif  // !_MSC_VER

Campaign::Campaign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RTB5.Campaign)
}

void Campaign::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Campaign::Campaign(const Campaign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RTB5.Campaign)
}

void Campaign::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  campaign_id_ = GOOGLE_ULONGLONG(0);
  union_id_ = GOOGLE_ULONGLONG(0);
  campaign_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  percent_ = 0;
}

Campaign::~Campaign() {
  // @@protoc_insertion_point(destructor:RTB5.Campaign)
  SharedDtor();
}

void Campaign::SharedDtor() {
  campaign_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Campaign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Campaign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Campaign_descriptor_;
}

const Campaign& Campaign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_2eproto();
  return *default_instance_;
}

Campaign* Campaign::default_instance_ = NULL;

Campaign* Campaign::New(::google::protobuf::Arena* arena) const {
  Campaign* n = new Campaign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Campaign::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Campaign*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(campaign_id_, union_id_);
  campaign_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  percent_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool Campaign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RTB5.Campaign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 campaign_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &campaign_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_union_id;
        break;
      }

      // optional uint64 union_id = 2;
      case 2: {
        if (tag == 16) {
         parse_union_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &union_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_campaign_name;
        break;
      }

      // optional string campaign_name = 3;
      case 3: {
        if (tag == 26) {
         parse_campaign_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_campaign_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->campaign_name().data(), this->campaign_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.Campaign.campaign_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pattern;
        break;
      }

      // optional string pattern = 4;
      case 4: {
        if (tag == 34) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern().data(), this->pattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RTB5.Campaign.pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_percent;
        break;
      }

      // optional double percent = 5;
      case 5: {
        if (tag == 41) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &percent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RTB5.Campaign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RTB5.Campaign)
  return false;
#undef DO_
}

void Campaign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RTB5.Campaign)
  // optional uint64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->campaign_id(), output);
  }

  // optional uint64 union_id = 2;
  if (this->union_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->union_id(), output);
  }

  // optional string campaign_name = 3;
  if (this->campaign_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->campaign_name().data(), this->campaign_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Campaign.campaign_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->campaign_name(), output);
  }

  // optional string pattern = 4;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Campaign.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pattern(), output);
  }

  // optional double percent = 5;
  if (this->percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->percent(), output);
  }

  // @@protoc_insertion_point(serialize_end:RTB5.Campaign)
}

::google::protobuf::uint8* Campaign::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RTB5.Campaign)
  // optional uint64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->campaign_id(), target);
  }

  // optional uint64 union_id = 2;
  if (this->union_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->union_id(), target);
  }

  // optional string campaign_name = 3;
  if (this->campaign_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->campaign_name().data(), this->campaign_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Campaign.campaign_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->campaign_name(), target);
  }

  // optional string pattern = 4;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RTB5.Campaign.pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pattern(), target);
  }

  // optional double percent = 5;
  if (this->percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->percent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RTB5.Campaign)
  return target;
}

int Campaign::ByteSize() const {
  int total_size = 0;

  // optional uint64 campaign_id = 1;
  if (this->campaign_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->campaign_id());
  }

  // optional uint64 union_id = 2;
  if (this->union_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->union_id());
  }

  // optional string campaign_name = 3;
  if (this->campaign_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->campaign_name());
  }

  // optional string pattern = 4;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pattern());
  }

  // optional double percent = 5;
  if (this->percent() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Campaign::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Campaign* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Campaign>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Campaign::MergeFrom(const Campaign& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.campaign_id() != 0) {
    set_campaign_id(from.campaign_id());
  }
  if (from.union_id() != 0) {
    set_union_id(from.union_id());
  }
  if (from.campaign_name().size() > 0) {

    campaign_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.campaign_name_);
  }
  if (from.pattern().size() > 0) {

    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.percent() != 0) {
    set_percent(from.percent());
  }
}

void Campaign::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Campaign::CopyFrom(const Campaign& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Campaign::IsInitialized() const {

  return true;
}

void Campaign::Swap(Campaign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Campaign::InternalSwap(Campaign* other) {
  std::swap(campaign_id_, other->campaign_id_);
  std::swap(union_id_, other->union_id_);
  campaign_name_.Swap(&other->campaign_name_);
  pattern_.Swap(&other->pattern_);
  std::swap(percent_, other->percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Campaign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Campaign_descriptor_;
  metadata.reflection = Campaign_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Campaign

// optional uint64 campaign_id = 1;
void Campaign::clear_campaign_id() {
  campaign_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Campaign::campaign_id() const {
  // @@protoc_insertion_point(field_get:RTB5.Campaign.campaign_id)
  return campaign_id_;
}
 void Campaign::set_campaign_id(::google::protobuf::uint64 value) {
  
  campaign_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Campaign.campaign_id)
}

// optional uint64 union_id = 2;
void Campaign::clear_union_id() {
  union_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Campaign::union_id() const {
  // @@protoc_insertion_point(field_get:RTB5.Campaign.union_id)
  return union_id_;
}
 void Campaign::set_union_id(::google::protobuf::uint64 value) {
  
  union_id_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Campaign.union_id)
}

// optional string campaign_name = 3;
void Campaign::clear_campaign_name() {
  campaign_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Campaign::campaign_name() const {
  // @@protoc_insertion_point(field_get:RTB5.Campaign.campaign_name)
  return campaign_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Campaign::set_campaign_name(const ::std::string& value) {
  
  campaign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.Campaign.campaign_name)
}
 void Campaign::set_campaign_name(const char* value) {
  
  campaign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.Campaign.campaign_name)
}
 void Campaign::set_campaign_name(const char* value, size_t size) {
  
  campaign_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.Campaign.campaign_name)
}
 ::std::string* Campaign::mutable_campaign_name() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.Campaign.campaign_name)
  return campaign_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Campaign::release_campaign_name() {
  
  return campaign_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Campaign::set_allocated_campaign_name(::std::string* campaign_name) {
  if (campaign_name != NULL) {
    
  } else {
    
  }
  campaign_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), campaign_name);
  // @@protoc_insertion_point(field_set_allocated:RTB5.Campaign.campaign_name)
}

// optional string pattern = 4;
void Campaign::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Campaign::pattern() const {
  // @@protoc_insertion_point(field_get:RTB5.Campaign.pattern)
  return pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Campaign::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RTB5.Campaign.pattern)
}
 void Campaign::set_pattern(const char* value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RTB5.Campaign.pattern)
}
 void Campaign::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RTB5.Campaign.pattern)
}
 ::std::string* Campaign::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:RTB5.Campaign.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Campaign::release_pattern() {
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Campaign::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:RTB5.Campaign.pattern)
}

// optional double percent = 5;
void Campaign::clear_percent() {
  percent_ = 0;
}
 double Campaign::percent() const {
  // @@protoc_insertion_point(field_get:RTB5.Campaign.percent)
  return percent_;
}
 void Campaign::set_percent(double value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:RTB5.Campaign.percent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace RTB5

// @@protoc_insertion_point(global_scope)
